# -*- coding: utf-8 -*-
"""230129.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15JENoiA8BpR_3vJGYj3p_UVZhwC-5sP4

####2023-01-29 python middle project camp 2nd class

#####1. 데이터수집 // 데이터 엔지니어링
#####2. 데이터 전처리
#####3. 데이터분석 // 데이터 사이언스
#####4. 결과
##### `데이터 관련 직종은 제조회사에서 많이 뽑음`
"""

from google.colab import drive
drive.mount('/content/drive')

!pip install selenium # 웹 테스트를 수행할 수 있도록 해주는 프레임워크, 동적 페이지 읽어오기
!pip install chromedriver-autoinstaller # 버전에 맞는 드라이버 자동 설치
!pip install BeautifulSoup4 # html 파싱
!pip install urlopen # url 주소로 페이지 읽어오기, 정적 페이지 한정
!pip install requests # api 호출을 위해 사용
!pip install tqdm # 진행 상황 표시

from selenium import webdriver
from selenium.webdriver.chrome.service import Service
import chromedriver_autoinstaller
from urllib.request import urlopen
from bs4 import BeautifulSoup
import pandas as pd
import numpy as np
import time
from tqdm import tqdm
import requests
from pprint import pprint

import matplotlib.pyplot as plt
from matplotlib import font_manager, rc
import seaborn as sns

api_key = 'RGAPI-1c7ffee0-2e00-4470-bd88-768f728499f3' # DEVELOPMENT API KEY

summoner_name = "악어는죽지않는다" # 이름이 악어는죽지않는다라는 사람의 정보를 보는 코드임
url = "https://kr.api.riotgames.com/lol/summoner/v4/summoners/by-name/" + summoner_name +'?api_key=' + api_key
summoner_info = requests.get(url).json()
summoner_info

puuid = summoner_info['puuid'] # summoner_info이라는 puuid를 들고옴
count = "100" # 숫자 100을 들고 옴
url = "https://asia.api.riotgames.com/lol/match/v5/matches/by-puuid/"+ puuid + "/ids?api_key=" + api_key +"&count=" + count
match_ids = requests.get(url).json() # 최근에 한 게임 100개를 가져옴. 출력은 안 되었지만 match_ids에 저장됨

matches = []
for match_id in tqdm(match_ids):
    match = {}
    url = "https://asia.api.riotgames.com/lol/match/v5/matches/"+match_id+"?api_key="+api_key
    result = requests.get(url).json()
    if 'status' in result : continue
    match['매치아이디'] = match_id
    match['게임모드'] = result['info']['gameMode']
    match['매치시간'] = result['info']['gameStartTimestamp']
    my_participants = list(filter(lambda x: x['summonerName']==summoner_name, result['info']['participants']))[0]
    match['챔피언'] = my_participants['championName']
    match['킬'] = my_participants['kills']
    match['데스'] = my_participants['deaths']
    match['어시스트'] = my_participants['assists']
    match['결과'] = '승리' if my_participants['win'] else '패배'
    matches.append(match)
matches = pd.DataFrame(matches)
matches.head()

"""###칼바람"""

aram_matches = matches[matches['게임모드'] == 'ARAM'] # numpy는 가로로 연산, pandas는 세로로 연산
aram_matches.head()

aram_ka_per_d = (aram_matches['킬'].sum() + aram_matches['어시스트'].sum())/aram_matches['데스'].sum()
print('KDA :',round(aram_ka_per_d,4))

aram_most_champion = aram_matches['챔피언'].mode()[0]
print('가장 많이 플레이한 챔피언 :',aram_most_champion)

aram_win_rate = len(aram_matches[aram_matches['결과'] == '승리']) / len(aram_matches)
print('승률 :', round(aram_win_rate*100,4),"%")

